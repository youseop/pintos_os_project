Kernel command line: -q -f put page-merge-par put child-sort run page-merge-par
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 218 sector (109 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-par' into the file system...
Putting 'child-sort' into the file system...
Executing 'page-merge-par':
(page-merge-par) begin
(page-merge-par) init
(page-merge-par) sort chunk 0
(page-merge-par) sort chunk 1
(child-sort) open "buf0": FAILED
child-sort: exit(1)
child-sort: exit(123)
(page-merge-par) sort chunk 2
(page-merge-par) sort chunk 3
child-sort: exit(123)
(page-merge-par) sort chunk 4
child-sort: exit(123)
(page-merge-par) sort chunk 5
(page-merge-par) open "buf5": FAILED
page-merge-par: exit(1)
Interrupt 0x0d (#GP General Protection Exception) at rip=800421702b
 cr2=0000000000625000 error=               0
rax cccccccccccccccc rbx 0000000000000000 rcx 0000008004243028 rdx 0000008004243028
rsp 0000008004243b80 rbp 0000008004243b90 rsi 0000008004243028 rdi 000000800426c028
rip 000000800421702b r8 0000008004243e08  r9 0000008004219eb9 r10 0000000000000000
r11 0000000000000206 r12 000000800421bd83 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000006
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:98 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004216a77 0x800421bb2b 0x8004209094 0x80042094b2 0x8004217e44 0x80042076bf 0x80042091eb 0x80042094b2 0x800420c03f 0x80042211f3 0x8004220804 0x8004220c26 0x800421903d 0x80042190c0 0x8004220c5a 0x800421a978 0x800421a944 0x80042072d4 0x800421c51e 0x800421be29 0x800421bcac 0x400c7f 0x4002dc 0x4007f7 0x400107 0x401504 0x40154d.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 209 ticks
Thread: 30 idle ticks, 52 kernel ticks, 127 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 1210 reads, 4134 writes
hd1:0: 218 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 2467 characters output
Key