Kernel command line: -q -f put multi-child-fd put sample.txt put child-close run multi-child-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 313 sector (156 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Executing 'multi-child-fd':
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
child-close: dying due to interrupt 0x03 (#BP Breakpoint Exception).
Interrupt 0x03 (#BP Breakpoint Exception) at rip=40349d
 cr2=000000000040349c error=               0
rax ffffffffffffffff rbx 0000000000000000 rcx 000000000040349c rdx 0000000000000000
rsp 000000004747fea8 rbp 000000004747fef0 rsi 0000000000000000 rdi 000000004747ff08
rip 000000000040349d r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000212 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000212
es: 001b ds: 001b cs: 0023 ss: 001b
(multi-child-fd) wait(exec()) = 0
(multi-child-fd) verified contents of "sample.txt"
(multi-child-fd) end
multi-child-fd: exit(0)
Execution of 'multi-child-fd' complete.
Timer: 90 ticks
Thread: 30 idle ticks, 43 kernel ticks, 17 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 355 reads, 488 writes
hd1:0: 220 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1810 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
