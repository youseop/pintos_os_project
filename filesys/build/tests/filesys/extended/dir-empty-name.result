FAIL
Kernel panic in run: PANIC at ../../devices/disk.c:408 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x8004213c73 0x800420fe41 0x800420f3f5 0x800421cf6c 0x800421c312 0x800421c50f 0x800421c8e1 0x8004219d7f 0x800421939f 0x8004218f0e 0x40011d 0x400e25 0x400e6e
Translation of call stack:
0x0000008004213c73: debug_panic (lib/kernel/debug.c:32)
0x000000800420fe41: select_sector (devices/disk.c:409)
0x000000800420f3f5: disk_read (devices/disk.c:217)
0x000000800421cf6c: inode_read_at (filesys/inode.c:274)
0x000000800421c312: lookup (filesys/directory.c:95 (discriminator 1))
0x000000800421c50f: dir_add (filesys/directory.c:145)
0x000000800421c8e1: dir_mkdir (filesys/directory.c:234)
0x0000008004219d7f: mkdir (userprog/syscall.c:379)
0x000000800421939f: syscall_handler (userprog/syscall.c:150)
0x0000008004218f0e: no_sti (userprog/syscall-entry.o:?)
0x000000000040011d: (unknown)
0x0000000000400e25: (unknown)
0x0000000000400e6e: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
