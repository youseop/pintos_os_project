main start
Kernel command line: -q -f put page-merge-mm put child-qsort-mm run page-merge-mm
thread_init start
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 224 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...Boot complete.
Putting 'page-merge-mm' into the file system...
Putting 'child-qsort-mm' into the file system...
Executing 'page-merge-mm':
(page-merge-mm) begin
(page-merge-mm) init
(page-merge-mm) sort chunk 0
(page-merge-mm) sort chunk 1
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 2
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 3
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 4
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 5
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 6
(page-merge-mm) sort chunk 7
child-qsort-mm: exit(80)
child-qsort-mm: exit(80)
(page-merge-mm) wait for child 0
(page-merge-mm) wait for child 1
(page-merge-mm) wait for child 2
(page-merge-mm) wait for child 3
(page-merge-mm) wait for child 4
(page-merge-mm) wait for child 5
(page-merge-mm) wait for child 6
(page-merge-mm) wait for child 7
child-qsort-mm: exit(80)
(page-merge-mm) merge
(page-merge-mm) verify
(page-merge-mm) success, buf_idx=1,048,576
(page-merge-mm) end
page-merge-mm: exit(0)
Execution of 'page-merge-mm' complete.
Timer: 459 ticks
Thread: 30 idle ticks, 78 kernel ticks, 352 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 4956 reads, 7029 writes
hd1:0: 224 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1871 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
