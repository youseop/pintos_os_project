Kernel command line: -q -threads-tests -f run priority-donate-multiple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 297 sector (148 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
Formatting file system...done.
Boot complete.
Executing 'priority-donate-multiple':
(priority-donate-multiple) begin
Page fault at 0: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=8004207f85
 cr2=0000000000000000 error=               0
rax 0000000000000000 rbx 0000000000000000 rcx 0000000000000000 rdx 0000000000000020
rsp 000000800423cf50 rbp 000000800423cf70 rsi 000000800423c068 rdi 0000008004000058
rip 0000008004207f85 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000002
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004216a3d 0x800421b6ab 0x800421b82a 0x800420905a 0x8004209478 0x800420a5a0 0x800420eb76 0x800420783c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 55 ticks
Thread: 30 idle ticks, 25 kernel ticks, 0 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 9 reads, 18 writes
Console: 1614 characters output
Key